<: set ComponentName [getComponentNameString] :>
<: setFileName [ttcl_string_concat $ComponentName "_tb_top"] :>
<: setFileExtension ".v" :>
<: setOutputDirectory [ttcl_string_concat "./" $ComponentName "/simulation"] :>
<: set C_FAMILY [getStringValue "c_family"] :>
<: set c_num_of_mon_slots      [getIntValue "C_NUM_MONITOR_SLOTS"] :>
<: set c_enable_trace         [getIntValue "C_ENABLE_TRACE"] :>
<: set c_enable_event_log     [getIntValue "C_ENABLE_EVENT_LOG"] :>
<: set c_slot_0_axi_protocol      [getStringValue "C_SLOT_0_AXI_PROTOCOL"] :>
<: set c_slot_1_axi_protocol      [getStringValue "C_SLOT_1_AXI_PROTOCOL"] :>
<: set c_slot_2_axi_protocol      [getStringValue "C_SLOT_2_AXI_PROTOCOL"] :>
<: set c_slot_3_axi_protocol      [getStringValue "C_SLOT_3_AXI_PROTOCOL"] :>
<: set c_slot_4_axi_protocol      [getStringValue "C_SLOT_4_AXI_PROTOCOL"] :>
<: set c_slot_5_axi_protocol      [getStringValue "C_SLOT_5_AXI_PROTOCOL"] :>
<: set c_slot_6_axi_protocol      [getStringValue "C_SLOT_6_AXI_PROTOCOL"] :>
<: set c_slot_7_axi_protocol      [getStringValue "C_SLOT_7_AXI_PROTOCOL"] :>
<: set enable_ext_events          [getIntValue "ENABLE_EXT_EVENTS"] :>
<: set comment "//" :>
<#: ttcl/disclaimer.ttcl :>

`timescale 1ns/1ps
module <=: ComponentName :>_tb_top ();

//Clock Generation:
reg clk;
reg clk_n;
always begin
  clk = 0;
  forever #2.5 clk = ~clk;
end

always begin
  clk_n = 1;
  forever #2.5 clk_n = ~clk_n;
end

//Reset Generation:
reg reset,timeout_start;
initial begin
 reset = 1'b1;
 timeout_start = 1'b0;
 #1500;
 reset = 1'b0;
 #60000;
 timeout_start = 1'b1; 
end

wire done;
wire status;
wire resetn = ~reset;

//Example Design Instantiation:
<=: ComponentName :>_exdes example_design (
.clk_in1_p         (clk)  ,
.clk_in1_n         (clk_n),
.reset             (reset),    
.done              (done  ),
.status            (status)
);

   //Pass/Fail Check:
//reg [5:0] timeout_cnt;
   always @(posedge clk) begin
    if(resetn == 1'b1 && done == 1'b1) begin
      $display("EXDES:Done Received\n");
      if(status == 1'b1) begin
        $display("Test Completed Successfully");
      end else begin
        $display("Test FAILED");
      end
      $finish;
    end else begin
        if(timeout_start == 1'b1) begin
        $display("Test FAILED:Done not received in 6ms");
        $finish;
        end
    end
   end

endmodule
